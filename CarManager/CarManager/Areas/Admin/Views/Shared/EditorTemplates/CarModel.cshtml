@model CarManager.Areas.Admin.Models.CarModel
@{
    var carDiagrams = @ViewBag.CarDiagrams as SelectList;
    if(Model.IdCarDiagram == 0)
        Model.IdCarDiagram = carDiagrams.Select(o => int.Parse(o.Value)).First();
}
@Html.HiddenFor(model => model.IdCar)
<div class="form-group">
    @Html.LabelFor(model => model.CarNumberPlate, new { @class = "control-label col-md-2 col-sm-3 col-xs-12" })
    <div class="col-md-10 col-sm-9 col-xs-12">
        @Html.TextBoxFor(model => model.CarNumberPlate, new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.CarNumberPlate)
    </div>
</div>
<div class="form-group">
    @Html.LabelFor(model => model.Driver1, new { @class = "control-label col-md-2 col-sm-3 col-xs-12" })
    <div class="col-md-10 col-sm-9 col-xs-12">
        @Html.TextBoxFor(model => model.Driver1, new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.Driver1)
    </div>
</div>
<div class="form-group">
    @Html.LabelFor(model => model.Driver2, new { @class = "control-label col-md-2 col-sm-3 col-xs-12" })
    <div class="col-md-10 col-sm-9 col-xs-12">
        @Html.TextBoxFor(model => model.Driver2, new { @class = "form-control" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.IdCarDiagram, new { @class = "control-label col-md-2 col-sm-3 col-xs-12" })
    <div class="col-md-10 col-sm-9 col-xs-12">
        @Html.DropDownListFor(model => model.IdCarDiagram, carDiagrams, new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.IdCarDiagram)
    </div>
</div>

<div id="placeSeat">
    @{Html.RenderAction("SeatChart", "Car", new { IdCarDiagram = Model.IdCarDiagram });}
</div>

